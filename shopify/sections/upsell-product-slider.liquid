{%- comment -%}
  This is a starter file you can refer to during intial development of the new slider section.
  The file contains the base required schema, including a heading and a collection.
  The heading is outputted within an <h2> tag.
  The collection object is assigned to a new variable, and then the products are iterated over with a for loop.
  For each product, the title is outputted to the DOM.
{%- endcomment -%}

<link rel="stylesheet" href="{{ 'product-slider.css' | asset_url }}" media="print" onload="this.media='all'">

<link rel="stylesheet" href="https://unpkg.com/flickity@2/dist/flickity.min.css">
<script src="https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js"></script>
<noscript>{{ 'product-slider.css' | asset_url | stylesheet_tag }}</noscript>

<div class="slider">

  <h2 class="carousel-heading">{{ section.settings.collection_heading }}</h2>

  {% assign upsell_collection = section.settings.collection_object %}

  <div class="carousel">
  {% for upsell_product in upsell_collection.products %}
    <div class="carousel-cell">
      <div class="carousel-image">
      {{ upsell_product | image_url: width: 350 | image_tag: class: 'carousel-image', loading: 'lazy' }}
      <button class="quick-add-button badge badge--bottom-left" onClick="addItemToCart({{upsell_product.selected_or_first_available_variant.id}})">Quick Add</button>
      {%- if upsell_product.tags contains "badge: Sale" -%}
          <span
            class="sale-badge badge badge--bottom-left color-{{ settings.sale_badge_color_scheme }}">
            Sale
          </span>
        {%- endif -%}
      </div>
      <div class="carousel-description">
      <div class="carousel-product-name"> {{ upsell_product.title }}</div>
      {% render 'price', product: upsell_product, price_class: '' %}
    </div>
    </div>
  {% endfor %}
  </div>

</div>


<script type="text/javascript">
  var carousel = document.querySelector('.carousel');
  var flkty = new Flickity( carousel, {
    cellAlign: 'center'
  });

  var imgs = carousel.querySelectorAll('.carousel-cell img');
  var docStyle = document.documentElement.style;
  var transformProp = typeof docStyle.transform == 'string' ?
    'transform' : 'WebkitTransform';

  flkty.on( 'scroll', function() {
    flkty.slides.forEach( function( slide, i ) {
      var img = imgs[i];
      var x = ( slide.target + flkty.x ) * -1/3;
      img.style[ transformProp ] = 'translateX(' + x  + 'px)';
    });
  });
</script>

<script>  
function addItemToCart(variant_id) {
  let formData = {
  'items': [{
    'id': variant_id,
    'quantity': 1
    }]
  };
  fetch(window.Shopify.routes.root + 'cart/add.js', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(formData)
  })
  .then(response => {
    return response.json();
  })
  .catch((error) => {
    console.error('Error:', error);
  });
}
</script>    


{% schema %}
{
  "name": "Upsell Slider",
  "settings": [
    {
      "type": "header",
      "content": "Upsell Slider"
    },
    {
      "type": "text",
      "id": "collection_heading",
      "label": "Heading",
      "default": "Collection Heading"
    },
    {
      "type": "collection",
      "id": "collection_object",
      "label": "Collection"
    }
  ],
  "presets": [
    {
      "name": "Upsell Slider"
    }
  ]
}
{% endschema %}

